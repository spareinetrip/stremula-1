"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.parse = exports.isProxy = void 0;
const commander_1 = require("commander");
const path_1 = require("path");
const fs = __importStar(require("fs"));
const { name, version } = require('../package.json');
const exists = (path) => {
    fs.accessSync(absolutePath(path));
    return path;
};
const absolutePath = (path) => ((0, path_1.isAbsolute)(path) ? path : (0, path_1.resolve)(process.cwd(), path));
const parseInteger = (value) => parseInt(value, 10);
const program = (0, commander_1.createCommand)(name)
    .version(version, '-v, --version', 'show version number')
    .option('-n, --hostname <hostname>', 'hostname for the server', 'localhost')
    .option('-s, --source <source>', 'source port for the server', parseInteger, 9001)
    .option('-t, --target <target>', 'target port for the server', parseInteger, 9000)
    .option('-c, --cert <cert>', 'path to SSL certificate', exists, (0, path_1.resolve)(__dirname, '..', 'resources', 'localhost.pem'))
    .option('-k, --key <key>', 'path to SSL key', exists, (0, path_1.resolve)(__dirname, '..', 'resources', 'localhost-key.pem'))
    .option('-o, --config <config>', 'path to configuration file', (path) => require(absolutePath(path)));
function isConfig(args) {
    return Boolean(args && typeof args === 'object' && 'config' in args);
}
function isProxy(input) {
    return Boolean(input &&
        typeof input === 'object' &&
        'hostname' in input &&
        typeof input.hostname === 'string' &&
        'source' in input &&
        typeof input.source === 'number' &&
        'target' in input &&
        typeof input.target === 'number' &&
        'cert' in input &&
        typeof input.cert === 'string' &&
        'key' in input &&
        typeof input.key === 'string');
}
exports.isProxy = isProxy;
function parse(args) {
    const proxy = args === undefined ? program.parse().opts() : program.parse(args, { from: 'user' }).opts();
    return isConfig(proxy) ? proxy.config : proxy;
}
exports.parse = parse;
