#!/usr/bin/env node
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const fs_1 = __importDefault(require("fs"));
const http_proxy_1 = __importDefault(require("http-proxy"));
const ansi_colors_1 = require("ansi-colors");
const lib_1 = require("./lib");
const parsed = (0, lib_1.parse)();
const config = (0, lib_1.isProxy)(parsed) ? { proxy: parsed } : parsed;
for (const name of Object.keys(config)) {
    const { hostname, target, key, cert, source } = config[name];
    http_proxy_1.default
        .createServer({
        xfwd: true,
        ws: true,
        target: {
            host: hostname,
            port: target
        },
        ssl: {
            key: fs_1.default.readFileSync(key, 'utf8'),
            cert: fs_1.default.readFileSync(cert, 'utf8')
        }
    })
        .on('error', (e) => {
        console.error((0, ansi_colors_1.red)('Request failed to ' + name + ': ' + (0, ansi_colors_1.bold)(e.code)));
    })
        .listen(source);
    console.log((0, ansi_colors_1.green)(`Started ${(0, lib_1.isProxy)(parsed) ? 'proxy' : (0, ansi_colors_1.bold)(name)}: https://${hostname}:${source} â†’ http://${hostname}:${target}`));
}
